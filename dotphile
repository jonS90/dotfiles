#!/usr/bin/env python
import json
import os

config = {}
for localPath, operativePath in json.load(open("config.json"))["links"].items():
  localPath = os.path.realpath(localPath)
  operativePath = os.path.expanduser(operativePath)
  config[localPath] = operativePath

missingFiles = filter(lambda f: not os.path.exists(f), config.keys())
if (len(missingFiles)):
  exit("Some files are missing\n  " + "\n  ".join(missingFiles))

existingFiles = filter(os.path.exists, config.values())
if (len(existingFiles)):
  print str(len(existingFiles)) + " operative paths already exist"
  print "  " + "\n  ".join(existingFiles)

pairsToLink = filter(lambda (localPath, operativePath): not os.path.exists(operativePath), config.items())
print "Creating " + str(len(pairsToLink)) + " symlinks"
successCount = 0
failCount = 0
successfulLinks = list()

print

for (localPath, operativePath) in pairsToLink:
  bashCommand = "ln -s %(localPath)s %(operativePath)s" % locals()
  if os.system(bashCommand):
    failCount+=1
  else:
    successCount+=1
    successfulLinks.append(bashCommand)

if (len(successfulLinks)):
  print
  print str(len(successfulLinks)) + " links succeeded"
  print "  " + "\n  ".join(successfulLinks)


if (failCount):
  print
  print str(failCount) + " LINKS FAILED!"
